{{define "sql_method"}}package {{.GoPackage}}

import (
	"time"
	"context"

	"github.com/ezbuy/ezorm/v2/db"
)

var (
	_ time.Time
	_ context.Context
)

type sqlMethods struct {}

var SQL = &sqlMethods{}

{{- range $method := .Methods}}
type {{$method.Name}}Resp struct {
	{{- range $field := $method.Fields}}
	{{$field.Name}} {{$field.Type}}
	{{- end -}}
}

const _{{$method.Name}}SQL = "{{$method.SQL}}"

func (*sqlMethods) {{$method.Name}}(ctx context.Context, args ...interface{}) ([]*{{$method.Name}}Resp, error) {
	rows, err := db.MysqlQuery(_{{$method.Name}}SQL, args...)
	if err != nil {
		return nil, err
	}
	defer rows.Close()

	var results []*{{$method.Name}}Resp
	for rows.Next() {
		var o {{$method.Name}}Resp
		err = rows.Scan({{$method.Assign}})
		if err != nil {
			return nil, err
		}
		results = append(results, &o)
	}
	return results, nil
}
{{- end}}

{{- end -}}
